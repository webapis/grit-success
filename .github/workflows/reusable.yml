name: Reusable
on:
   workflow_call:
    inputs:
      marka:
        description: 'marka'
        required: true
        type: string
      maxconcurrency:
        description: 'page concurrency'
        required: false
        type: string
        default: '10'
      WEBSITE:
        description: 'website'
        required: true
        type: string
      GENDER:
        description: 'gender'
        required: true
        type: string
env:
  CLOUD: true
  GOOGLE_REFRESH_TOKEN: ${{secrets.GOOGLE_REFRESH_TOKEN}}
  CLIENT_SECRET: ${{secrets.CLIENT_SECRET}}
  CLIENT_ID: ${{secrets.CLIENT_ID}}
  START_URL: ${{inputs.start_url}}
  marka: ${{inputs.marka}}
  HEADLESS: true
  MAX_CONCURRENCY: '5'
  WEBSITE: 'biraradamoda'
  GENDER: ${{inputs.GENDER}}
  GH_TOKEN: ${{secrets.GH_TOKEN}}
  API_KEY: ${{secrets.API_KEY}}
  ALGOLIAKEY: ${{secrets.ALGOLIAKEY}}
jobs:
  aggregator:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
          ref: main
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      # - name: Cache node modules
      #   uses: actions/cache@v2
      #   env:
      #    cache-name: cache-node-modules
      #   with:
      #     # npm cache files are stored in `~/.npm` on Linux/macOS...
      #     path: ~/.npm
      #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-${{ env.cache-name }}-
      #       ${{ runner.os }}-build-
      #       ${{ runner.os }}-
      # - name: Install dependencies
      #   run: 'npm install'
      # - name: aggregation step
      #   id: collection
      #   run: node src/main.js
      # - name: categorize data
      #   id: categorize
      #   run: node utils/categorizeData.js
      - name: download data
        id: sponsorprods
        run: node src/app/utils/downloadData.mjs
      # - name: update schema
      #   id: impdschemaata
      #   run: node typesense/createSchema.mjs
      # - name: import data
      #   id: impdata
      #   run: node typesense/importData.mjs